/*
    Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import gsap from 'gsap';
import { useGSAP } from '@gsap/react';
import { useRef, useState } from 'react';
import { Float, useGLTF} from '@react-three/drei';

const Cube = ({ ...props }) => {
  const { nodes, materials } = useGLTF('/models/astronaut.glb')

  const cubeRef = useRef();
  const [hovered, setHovered] = useState(false);

  useGSAP(() => {
    gsap
      .timeline({
        repeat: -1,
        yoyo: true,
        repeatDelay: 0,
      })
      .to(cubeRef.current.rotation, {
        y: hovered ? '+=2' : `+=${Math.PI * 2}`,
        x: hovered ? '+=2' : `-=${Math.PI * 2}`,
        duration: 7.5,
      });
  });

  return (
    <Float floatIntensity={2}>
        <group {...props} dispose={null} scale={0.04} ref={cubeRef} rotation={[-90, 0, 90]}>
          <mesh
            geometry={nodes.Mesh_0397_rip_mat0001_0.geometry}
            material={materials['mat0.001']}
            />
          
          <mesh
              geometry={nodes.Mesh_0398_rip_mat0_0.geometry}
              material={materials.mat0}
            />
        </group>
    </Float>
  );
};

useGLTF.preload('models/astronaut.glb');

export default Cube;